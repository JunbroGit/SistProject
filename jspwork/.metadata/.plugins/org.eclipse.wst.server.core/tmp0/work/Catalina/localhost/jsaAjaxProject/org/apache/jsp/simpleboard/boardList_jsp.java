/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/9.0.86
 * Generated at: 2024-03-18 02:24:19 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.simpleboard;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;
import simpleboardanswer.model.SimpleAnswerDao;
import java.text.SimpleDateFormat;
import simpleboard.model.SimpleBoardDto;
import java.util.List;
import simpleboard.model.SimpleBoardDao;

public final class boardList_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.LinkedHashSet<>(3);
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = new java.util.LinkedHashSet<>(5);
    _jspx_imports_classes.add("java.util.List");
    _jspx_imports_classes.add("java.text.SimpleDateFormat");
    _jspx_imports_classes.add("simpleboard.model.SimpleBoardDto");
    _jspx_imports_classes.add("simpleboardanswer.model.SimpleAnswerDao");
    _jspx_imports_classes.add("simpleboard.model.SimpleBoardDao");
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    if (!javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      final java.lang.String _jspx_method = request.getMethod();
      if ("OPTIONS".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        return;
      }
      if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSP들은 오직 GET, POST 또는 HEAD 메소드만을 허용합니다. Jasper는 OPTIONS 메소드 또한 허용합니다.");
        return;
      }
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("<!DOCTYPE html>\r\n");
      out.write("<html>\r\n");
      out.write("<head>\r\n");
      out.write("<meta charset=\"UTF-8\">\r\n");
      out.write("<link href=\"https://cdn.jsdelivr.net/npm/bootstrap@5.3.2/dist/css/bootstrap.min.css\" rel=\"stylesheet\">\r\n");
      out.write("<link href=\"https://fonts.googleapis.com/css2?family=Dongle&family=Gaegu&family=Nanum+Myeongjo&family=Nanum+Pen+Script&family=Noto+Sans+KR:wght@100..900&display=swap\" rel=\"stylesheet\">\r\n");
      out.write("<script src=\"https://code.jquery.com/jquery-3.7.0.js\"></script>\r\n");
      out.write("<title>Insert title here</title>\r\n");
      out.write("<style type=\"text/css\">\r\n");
      out.write("	a:link ,a:visited{\r\n");
      out.write("		text-decoration: none;\r\n");
      out.write("		color: black;\r\n");
      out.write("	}\r\n");
      out.write("	\r\n");
      out.write("	a:hover{\r\n");
      out.write("		text-decoration: underline;\r\n");
      out.write("		color: gray;\r\n");
      out.write("	}\r\n");
      out.write("	\r\n");
      out.write("	body *{\r\n");
      out.write("		font-family: 'Gaegu';\r\n");
      out.write("	}\r\n");
      out.write("</style>\r\n");
      out.write("</head>\r\n");

	SimpleBoardDao dao=new SimpleBoardDao();
	//전체갯수
	int totalCount=dao.getTotalCount();
	int perPage=3; //한페이지당 보여질 글의 갯수
	int perBlock=5; //한블럭당 보여질 페이지 갯수
	int startNum; //db에서 가져올 글의 시작번호(mysql은 첫글이0번,오라클은 1년)
	int startPage; //각 블럭당 보여질 시작페이지
	int endPage; //각 블럭당 보여질 끝페이지
	int currentPage; //현제페이지
	int totalPage; //총페이지 수
	int no; //각 페이지당 출력할 시작번호
	
	//현제페이지 읽는데 단 null일 경우는 1페이지로 준다
	if(request.getParameter("currentPage")==null)
		currentPage=1;
	else
		currentPage=Integer.parseInt(request.getParameter("currentPage"));
	
	//총페이지수 구한다
	//총글갯수/한페이당 보여질 갯수로 나눔(7/5=1)
	//나머지가 1이라도 있으면 무조건 1페이지 추가(1+1=2페이지가 필요)
	totalPage=totalCount/perPage+(totalCount%perPage==0?0:1);
	
	//각 블럭당 보여질 시작페이지
	//perBlock=5일경우 현제페이지가 1~5일경우 시작페이지가 1,끝페이지가 5
	//현제가 13일경우 시작:11 끝:15
	startPage=(currentPage-1)/perBlock*perBlock+1;
	endPage=startPage+perBlock-1;
	
	//총페이지가 23일경우 마지막블럭은 끝페이지 25가 아니라 23
	if(endPage>totalPage)
		endPage=totalPage;
	
	//각 페이지에서 보여질 시작번호
	//1페이지:0 2페이지:5 3페이지:10...
	startNum=(currentPage-1)*perPage;
	
	//각 페이당 출력할 시작번호 구하기
	//총글갯수가 23 , 1페이지:23 2페이지:18 3페이지:13
	no=totalCount-(currentPage-1)*perPage;
	
	//페이지에서 보여질 글만 가져오기
	List<SimpleBoardDto> list=dao.getPagingList(startNum, perPage);
	
	//List<SimpleBoardDto>list=dao.getAllDatas();
	SimpleDateFormat sdf=new SimpleDateFormat("yyyy-MM-dd HH:mm");
	//int count=list.size();
	
	//list의 각 dto에 댓글개수 저장해두기
	SimpleAnswerDao adao=new SimpleAnswerDao();
	
	for(SimpleBoardDto dto:list){
		
		//댓글변수에 댓글 총개수 넣기
		int acount=adao.getAnswerList(dto.getNum()).size();
		dto.setAnswercount(acount);
	}

      out.write("\r\n");
      out.write("<body>\r\n");
      out.write("<div style=\"margin: 50px 100px; width: 800px;\">\r\n");
      out.write("	<button type=\"button\" class=\"btn btn-info\" onclick=\"location.href='addForm.jsp'\" style=\"margin-left: 550px;\">글쓰기</button>\r\n");
      out.write("	<br>\r\n");
      out.write("	<h6><b>총");
      out.print(totalCount );
      out.write("개의 글이 있습니다</b></h6>\r\n");
      out.write("	<table class=\"table table-boerdered\">\r\n");
      out.write("		<caption align=\"top\"><b>간단목록게시판</b></caption>\r\n");
      out.write("		<tr class=\"table-light\">\r\n");
      out.write("			<th width=\"80\">번호</th>\r\n");
      out.write("			<th width=\"350\">제목</th>\r\n");
      out.write("			<th width=\"180\">작성자</th>\r\n");
      out.write("			<th width=\"180\">작성일</th>\r\n");
      out.write("			<th width=\"80\">조회</th>\r\n");
      out.write("		</tr>\r\n");
      out.write("		\r\n");
      out.write("		");

			if(totalCount==0)
			{
      out.write("\r\n");
      out.write("					<tr>\r\n");
      out.write("						<td colspan=\"5\" align=\"center\">\r\n");
      out.write("							<h6><b>등록된 게시글이 없습니다</b></h6>\r\n");
      out.write("						</td>\r\n");
      out.write("					</tr>\r\n");
      out.write("			");
}else{
				for(int i=0;i<list.size();i++)
				{
					SimpleBoardDto dto=list.get(i);
					
      out.write("\r\n");
      out.write("					<tr>\r\n");
      out.write("						<td align=\"center\">");
      out.print(no-- );
      out.write("</td>\r\n");
      out.write("						<td>\r\n");
      out.write("							<a href=\"contentView.jsp?num=");
      out.print(dto.getNum());
      out.write("\">\r\n");
      out.write("								");
      out.print(dto.getSubject() );
      out.write("\r\n");
      out.write("							</a>\r\n");
      out.write("							<!-- 댓글개수 -->\r\n");
      out.write("							");

								if(dto.getAnswercount()>0){
      out.write("\r\n");
      out.write("									\r\n");
      out.write("									<a href=\"contentView.jsp?num=");
      out.print(dto.getNum());
      out.write("&currentPage=");
      out.print(currentPage );
      out.write("#alist\" style=\"color: red;\">\r\n");
      out.write("									[");
      out.print(dto.getAnswercount() );
      out.write("]\r\n");
      out.write("									</a>\r\n");
      out.write("								");
}
							
      out.write("\r\n");
      out.write("						</td>\r\n");
      out.write("						<td>");
      out.print(dto.getWriter() );
      out.write("</td>\r\n");
      out.write("						<td>");
      out.print(sdf.format(dto.getWriteday()) );
      out.write("</td>\r\n");
      out.write("						<td>");
      out.print(dto.getReadcount() );
      out.write("</td>\r\n");
      out.write("					</tr>\r\n");
      out.write("				");
}
			}
		
      out.write("\r\n");
      out.write("	</table>\r\n");
      out.write("	\r\n");
      out.write("	<!-- 페이지 번호 출력 -->\r\n");
      out.write("	<ul class=\"pagination justify-content-center\">\r\n");
      out.write("	");

		//이전
		if(startPage>1)
		{
      out.write("\r\n");
      out.write("			<li class=\"page-item\">\r\n");
      out.write("				<a class=\"page-link\" href=\"boardList.jsp?currentPage=");
      out.print(startPage-1);
      out.write("\" style=\"color: black;\">이전</a>\r\n");
      out.write("			</li>\r\n");
      out.write("		");
}
		for(int pp=startPage;pp<=endPage;pp++)
		{
			if(pp==currentPage)
			{
      out.write("\r\n");
      out.write("				<li class=\"page-item active\">\r\n");
      out.write("					<a class=\"page-link\" href=\"boardList.jsp?currentPage=");
      out.print(pp);
      out.write('"');
      out.write('>');
      out.print(pp );
      out.write("</a>\r\n");
      out.write("				</li>\r\n");
      out.write("			");
}else
			{
      out.write("\r\n");
      out.write("				<li class=\"page-item\">\r\n");
      out.write("					<a class=\"page-link\" href=\"boardList.jsp?currentPage=");
      out.print(pp);
      out.write('"');
      out.write('>');
      out.print(pp );
      out.write("</a>\r\n");
      out.write("				</li>\r\n");
      out.write("			");
}
		}
		
		//다음
		if(endPage<totalPage)
		{
      out.write("\r\n");
      out.write("			<li class=\"page-item\">\r\n");
      out.write("				<a class=\"page-link\" href=\"boardList.jsp?currentPage=");
      out.print(endPage+1);
      out.write("\" style=\"color: black;\">다음</a>\r\n");
      out.write("			</li>\r\n");
      out.write("		");
}
	
      out.write("\r\n");
      out.write("	</ul>\r\n");
      out.write("</div>\r\n");
      out.write("</body>\r\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
